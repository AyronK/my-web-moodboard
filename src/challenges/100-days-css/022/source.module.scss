@import "../../../styles/colors.scss";

@property --angle {
    syntax: "<angle>";
    inherits: false;
    initial-value: 0deg;
}

.container {
    padding: 48px;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-template-rows: 2fr 5fr 3fr;
    align-items: center;
    justify-content: center;
    justify-items: center;
    color: white;

    > div {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    > div:first-of-type {
        width: 100%;
    }

    div:nth-of-type(1),
    div:nth-of-type(2) {
        grid-column: 1/3;
    }

    h1 {
        width: 100%;
        font-size: 26px;
        line-height: 24px;
        font-weight: 500;
        text-align: center;
        white-space: break-spaces;
        word-break: break-words;
        &::first-line {
            font-size: 16px;
            font-weight: 300;
        }
    }
}

.progress {
    --activeColor: #{$color-terciary};
    position: relative;
    width: 104px;
    height: 104px;
    border-radius: 50%;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;

    > * {
        z-index: 3;
    }

    background: conic-gradient(
        var(--activeColor) var(--angle),
        rgba(0, 0, 0, 0.35) calc(var(--angle) + 0.5deg)
    );
    animation: progressLoad 1s ease-out forwards;

    &:before,
    &:after {
        content: "";
        position: absolute;
        border-radius: inherit;
        background-color: #252525;
    }

    &:before {
        z-index: -1;
        inset: -2px;
    }

    &:after {
        z-index: 1;
        inset: 6px;
    }

    .value {
        font-size: 20px;
        font-weight: 500;
    }

    .unit {
        opacity: 0.6;
        font-size: 13px;
    }
}

.progressSmall {
    @extend .progress;
    width: 80px;
    height: 80px;
    --activeColor: #{$color-quaternary};

    .value {
        font-size: 16px;
    }

    .unit {
        font-size: 11px;
    }

    &:after {
        z-index: 1;
        inset: 4px;
    }
}

@keyframes progressLoad {
    from {
        --angle: 0deg;
    }
    to {
        --angle: calc(var(--progress) * 360deg);
    }
}
