@import "../../../styles/colors.scss";

@function getColor($amount) {
    @return change-color(
        hsl(0, 62%, 42%),
        $hue: hue(rgb(247, 0, 255)) + $amount
    );
}

.container {
    display: flex;
    flex-direction: column;
    height: 220px;
    width: 300px;
    border-radius: 4px;
    overflow: hidden;
    box-shadow: 4px 4px 8px 2px rgba(0, 0, 0, 0.3);
}

.header,
.body {
    padding: 16px;
}

.header {
    background-color: darkolivegreen;
    color: white;
    display: grid;
    grid-template-columns: repeat(auto-fit, 50%);

    .heading {
        font-size: 14px;
        line-height: 20px;
        margin: 0;
        text-transform: uppercase;
        font-weight: 600;
    }

    .label {
        text-align: right;
        font-size: 12px;
        line-height: 20px;
        margin: 0;
    }

    .date {
        font-size: 10px;
        line-height: 20px;
        margin: 0;
    }

    .currency {
        text-align: right;
        font-size: 14px;
        line-height: 20px;
        font-weight: 600;
        margin: 0;
    }
}

.body {
    flex: 1;
    background-color: white;
    display: flex;
    flex-direction: column;
    gap: 12px;
}

.labels {
    position: relative;
    bottom: 0;
    width: 100%;
    margin-top: auto;
    display: flex;
    justify-content: space-between;
    text-transform: uppercase;
    font-size: 10px;
    line-height: 12px;
    color: gray;
}

.legend {
    display: flex;
    justify-content: flex-end;
    font-size: 10px;
    line-height: 12px;
    gap: 16px;

    > span {
        display: flex;
        flex-direction: row;
    }

    > span::before {
        content: "";
        border-radius: 100px;
        width: 12px;
        height: 3px;
        margin-right: 8px;
        margin-top: auto;
        margin-bottom: auto;
    }

    @for $i from 1 through 10 {
        > span:nth-last-of-type(#{$i})::before {
            background-color: getColor($i * 100);
        }
    }
}

.chart {
    position: relative;
    flex: 1;
    background-image: repeating-linear-gradient(
        lightgray 0px,
        lightgray 0px,
        white 1px,
        white 30px
    );

    &:after {
        content: "";
        pointer-events: bounding-box;
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        cursor: move;
    }

    @for $i from 1 through 10 {
        g:nth-last-of-type(#{$i}) {
            stroke: getColor($i * 100);

            circle {
                fill: getColor($i * 100);
            }
        }
    }

    svg {
        position: absolute;
        top: 0;
        bottom: 0;
        left: 0;
        right: 0;
        fill: transparent;

        circle {
            stroke-width: 1px;
        }
    }
}
