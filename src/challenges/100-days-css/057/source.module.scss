@import "../../../styles/colors.scss";

$sideLength: 80;
$triangleHeight: $sideLength * 1.732;
$translate: 129.2px;
$degreeZ: 8deg;
$degreeY: 35.264deg;
$degreeX1: 135deg;
$degreeX2: 45deg;

.container {
    perspective: 1000px;
}

.icosahedron {
    transform-style: preserve-3d;
    transform: scale(1) rotateX(-40deg) rotateY(-40deg);
    height: 280px;
    width: 160px;
    transition: all 3s ease-in-out;

    &:hover {
        transform: scale(0.5) rotateX(-320deg) rotateY(220deg);
    }
}

.triangle {
    position: absolute;
    width: 0;
    height: 0;
    border-style: solid;
    border-width: 0 $sideLength + px $triangleHeight + px $sideLength + px;
    border-color: transparent transparent darken($color-quaternary, 5%)
        transparent;

    transform-origin: 50% 100%;
    transition: all 3s ease-in-out;

    &:nth-child(1) {
        transform: translateZ($translate) rotateZ(90deg) rotateX(159.095deg);
    }
    &:nth-child(2) {
        transform: translateZ($translate) rotateZ(-90deg) rotateX(159.095deg);
    }
    &:nth-child(3) {
        transform: translateZ(-1 * $translate) rotateZ(90deg)
            rotateX(-159.095deg);
    }
    &:nth-child(4) {
        transform: translateZ(-1 * $translate) rotateZ(-90deg)
            rotateX(-159.095deg);
    }
    &:nth-child(5) {
        transform: rotateY(-90deg) translateZ($translate) rotateX(20.905deg);
    }
    &:nth-child(6) {
        transform: rotateY(-90deg) translateZ($translate) rotateX(159.095deg);
    }
    &:nth-child(7) {
        transform: rotateY(-90deg) translateZ(-1 * $translate)
            rotateX(-20.905deg);
    }
    &:nth-child(8) {
        transform: rotateY(-90deg) translateZ(-1 * $translate)
            rotateX(-159.095deg);
    }
    &:nth-child(9) {
        transform: translateY($translate) rotateX(69.095deg);
    }
    &:nth-child(10) {
        transform: translateY($translate) rotateX(-69.095deg);
    }
    &:nth-child(11) {
        transform: translateY(-1 * $translate) rotateX(110.905deg);
    }
    &:nth-child(12) {
        transform: translateY(-1 * $translate) rotateX(-110.905deg);
    }
    &:nth-child(13) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY(-1 * $translate) translateX($sideLength + px)
            rotateX(-1 * $degreeX1) rotateY(-1 * $degreeY)
            rotateZ(-1 * $degreeZ);
    }
    &:nth-child(14) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY(-1 * $translate) translateX($sideLength + px)
            rotateX($degreeX1) rotateY($degreeY) rotateZ(-1 * $degreeZ);
    }
    &:nth-child(15) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY(-1 * $translate) translateX(-1 * $sideLength + px)
            rotateX(-1 * $degreeX1) rotateY($degreeY) rotateZ($degreeZ);
    }
    &:nth-child(16) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY(-1 * $translate) translateX(-1 * $sideLength + px)
            rotateX($degreeX1) rotateY(-1 * $degreeY) rotateZ($degreeZ);
    }
    &:nth-child(17) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY($translate) translateX($sideLength + px)
            rotateX($degreeX2) rotateY(-1 * $degreeY) rotateZ(-1 * $degreeZ);
    }
    &:nth-child(18) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY($translate) translateX($sideLength + px)
            rotateX(-1 * $degreeX2) rotateY($degreeY) rotateZ(-1 * $degreeZ);
    }
    &:nth-child(19) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY($translate) translateX(-1 * $sideLength + px)
            rotateX($degreeX2) rotateY($degreeY) rotateZ($degreeZ);
    }
    &:nth-child(20) {
        border-width: $triangleHeight + px $sideLength + px 0 $sideLength + px;
        transform: translateY($translate) translateX(-1 * $sideLength + px)
            rotateX(-1 * $degreeX2) rotateY(-1 * $degreeY) rotateZ($degreeZ);
    }

    @for $i from 1 through 6 {
        $id: $i * 2;
        &:nth-child(#{$id}) {
            border-color: transparent
                transparent
                lighten($color-quaternary, 5%)
                transparent;
        }
    }
    @for $i from 13 through 20 {
        &:nth-child(#{$i}) {
            border-color: lighten($color-quaternary, 3%)
                transparent
                transparent
                transparent;
        }
    }
}
