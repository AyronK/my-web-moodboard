@import "../../../styles/colors.scss";

.container {
    position: absolute;
    z-index: 1;
    width: 100%;
    height: 100%;
    counter-reset: particle;

    filter: url("#fluid-filter");
}

.container .liquid {
    z-index: 3;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background: radial-gradient(
        closest-side,
        $color-quaternary,
        $color-terciary
    );
    width: 80px;
    height: 80px;
    border-radius: 50%;
    width: 16px;
    height: 16px;
    box-shadow: 4px 4px 8px 8px rgba(0, 0, 0, 0.1);
}

.particles,
.blobs {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
}

@for $i from 1 through 6 {
    .container .liquid:nth-child(#{$i}) {
        width: 32px + random(24) * 1px;
        height: 32px + random(24) * 1px;
        animation: blobAnimation#{$i} 5s linear infinite;
        animation-delay: random(10) * 0.1s;
        animation-duration: random(20) * 0.5s + 3s;
    }

    @keyframes blobAnimation#{$i} {
        0% {
            transform: translate(-50%, -50%) scale(1, 1) rotate(0deg)
                translate(0, 0);
        }
        25% {
            transform: translate(-50%, -50%)
                scale(0.8 + random(4) * 0.1, 0.8 + random(4) * 0.1)
                rotate(90deg)
                translate(random(8) * 5% - 20%, random(8) * 5% - 20%);
        }
        75% {
            transform: translate(-50%, -50%)
                scale(0.8 + random(4) * 0.1, 0.8 + random(4) * 0.1)
                rotate(270deg)
                translate(random(8) * 5% - 20%, random(8) * 5% - 20%);
        }
        100% {
            transform: translate(-50%, -50%) scale(1, 1) rotate(360deg)
                translate(0, 0);
        }
    }
}
.container .liquid:last-child {
    animation: none;
}

.container .particleContainer {
    position: absolute;
    top: 50%;
    left: 50%;
}

.particleContainer .particle {
    z-index: 2;
    border-radius: 50%;
    width: 16px;
    height: 16px;
    background: radial-gradient(
        closest-side,
        $color-quaternary,
        $color-terciary
    );
    animation: particleTransformation 10s ease-in-out infinite;
}

@for $i from 1 through 8 {
    .container .particleContainer:nth-child(#{$i}) {
        transform: translate(-50%, -50%);
        animation: particleRotation#{$i}
            random(100) *
            0.05s +
            3s
            linear
            infinite;

        .particle {
            animation-delay: random(100) * 0.025s + $i * 0.3s;
            animation-duration: random(100) * 0.05s + 10s + $i * 0.3s;
        }
    }

    @keyframes particleRotation#{$i} {
        0% {
            transform: translate(-50%, -50%) rotate($i * 45deg);
        }
        50% {
            transform: translate(-50%, -50%)
                rotate(120deg + random(120) * 1deg + $i * 45deg);
        }
        100% {
            transform: translate(-50%, -50%) rotate(360 + $i * 45deg);
        }
    }
}

@keyframes particleTransformation {
    0% {
        transform: translate(0, 0) scale(1.3);
    }
    25% {
        transform: translate(600%, 600%) scale(0.8);
    }
    50% {
        transform: translate(0, 0) scale(1.3);
    }
    75% {
        transform: translate(-600%, -600%) scale(0.8);
    }
    100% {
        transform: translate(0, 0) scale(1.3);
    }
}
